<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yonyou.scf.common.mapper.auto.DigitalCertificateMapper" >
  <resultMap id="BaseResultMap" type="com.yonyou.scf.common.entity.DigitalCertificate" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="sign_bank_id" property="signBankId" jdbcType="BIGINT" />
    <result column="sn" property="sn" jdbcType="VARCHAR" />
    <result column="dn" property="dn" jdbcType="VARCHAR" />
    <result column="ca" property="ca" jdbcType="VARCHAR" />
    <result column="expire_date" property="expireDate" jdbcType="VARCHAR" />
    <result column="file_id" property="fileId" jdbcType="BIGINT" />
    <result column="bind_status" property="bindStatus" jdbcType="VARCHAR" />
    <result column="auditing_status" property="auditingStatus" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="VARCHAR" />
    <result column="update_user" property="updateUser" jdbcType="BIGINT" />
    <result column="credential_pic" property="credentialPic" jdbcType="BIGINT" />
    <result column="credential_pic2" property="credentialPic2" jdbcType="BIGINT" />
    <result column="credential_hand" property="credentialHand" jdbcType="BIGINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, sign_bank_id, sn, dn, ca, expire_date, file_id, bind_status, auditing_status, 
    create_time, create_user, update_time, update_user, credential_pic, credential_pic2, 
    credential_hand, remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yonyou.scf.common.entity.DigitalCertificateExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from digital_certificate
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from digital_certificate
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from digital_certificate
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yonyou.scf.common.entity.DigitalCertificateExample" >
    delete from digital_certificate
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yonyou.scf.common.entity.DigitalCertificate" >
    insert into digital_certificate (id, user_id, sign_bank_id, 
      sn, dn, ca, expire_date, 
      file_id, bind_status, auditing_status, 
      create_time, create_user, update_time, 
      update_user, credential_pic, credential_pic2, 
      credential_hand, remark)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{signBankId,jdbcType=BIGINT}, 
      #{sn,jdbcType=VARCHAR}, #{dn,jdbcType=VARCHAR}, #{ca,jdbcType=VARCHAR}, #{expireDate,jdbcType=VARCHAR}, 
      #{fileId,jdbcType=BIGINT}, #{bindStatus,jdbcType=VARCHAR}, #{auditingStatus,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=VARCHAR}, #{createUser,jdbcType=BIGINT}, #{updateTime,jdbcType=VARCHAR}, 
      #{updateUser,jdbcType=BIGINT}, #{credentialPic,jdbcType=BIGINT}, #{credentialPic2,jdbcType=BIGINT}, 
      #{credentialHand,jdbcType=BIGINT}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yonyou.scf.common.entity.DigitalCertificate" >
    insert into digital_certificate
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="signBankId != null" >
        sign_bank_id,
      </if>
      <if test="sn != null" >
        sn,
      </if>
      <if test="dn != null" >
        dn,
      </if>
      <if test="ca != null" >
        ca,
      </if>
      <if test="expireDate != null" >
        expire_date,
      </if>
      <if test="fileId != null" >
        file_id,
      </if>
      <if test="bindStatus != null" >
        bind_status,
      </if>
      <if test="auditingStatus != null" >
        auditing_status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="credentialPic != null" >
        credential_pic,
      </if>
      <if test="credentialPic2 != null" >
        credential_pic2,
      </if>
      <if test="credentialHand != null" >
        credential_hand,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="signBankId != null" >
        #{signBankId,jdbcType=BIGINT},
      </if>
      <if test="sn != null" >
        #{sn,jdbcType=VARCHAR},
      </if>
      <if test="dn != null" >
        #{dn,jdbcType=VARCHAR},
      </if>
      <if test="ca != null" >
        #{ca,jdbcType=VARCHAR},
      </if>
      <if test="expireDate != null" >
        #{expireDate,jdbcType=VARCHAR},
      </if>
      <if test="fileId != null" >
        #{fileId,jdbcType=BIGINT},
      </if>
      <if test="bindStatus != null" >
        #{bindStatus,jdbcType=VARCHAR},
      </if>
      <if test="auditingStatus != null" >
        #{auditingStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="credentialPic != null" >
        #{credentialPic,jdbcType=BIGINT},
      </if>
      <if test="credentialPic2 != null" >
        #{credentialPic2,jdbcType=BIGINT},
      </if>
      <if test="credentialHand != null" >
        #{credentialHand,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yonyou.scf.common.entity.DigitalCertificateExample" resultType="java.lang.Integer" >
    select count(*) from digital_certificate
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update digital_certificate
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.signBankId != null" >
        sign_bank_id = #{record.signBankId,jdbcType=BIGINT},
      </if>
      <if test="record.sn != null" >
        sn = #{record.sn,jdbcType=VARCHAR},
      </if>
      <if test="record.dn != null" >
        dn = #{record.dn,jdbcType=VARCHAR},
      </if>
      <if test="record.ca != null" >
        ca = #{record.ca,jdbcType=VARCHAR},
      </if>
      <if test="record.expireDate != null" >
        expire_date = #{record.expireDate,jdbcType=VARCHAR},
      </if>
      <if test="record.fileId != null" >
        file_id = #{record.fileId,jdbcType=BIGINT},
      </if>
      <if test="record.bindStatus != null" >
        bind_status = #{record.bindStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.auditingStatus != null" >
        auditing_status = #{record.auditingStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUser != null" >
        update_user = #{record.updateUser,jdbcType=BIGINT},
      </if>
      <if test="record.credentialPic != null" >
        credential_pic = #{record.credentialPic,jdbcType=BIGINT},
      </if>
      <if test="record.credentialPic2 != null" >
        credential_pic2 = #{record.credentialPic2,jdbcType=BIGINT},
      </if>
      <if test="record.credentialHand != null" >
        credential_hand = #{record.credentialHand,jdbcType=BIGINT},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update digital_certificate
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      sign_bank_id = #{record.signBankId,jdbcType=BIGINT},
      sn = #{record.sn,jdbcType=VARCHAR},
      dn = #{record.dn,jdbcType=VARCHAR},
      ca = #{record.ca,jdbcType=VARCHAR},
      expire_date = #{record.expireDate,jdbcType=VARCHAR},
      file_id = #{record.fileId,jdbcType=BIGINT},
      bind_status = #{record.bindStatus,jdbcType=VARCHAR},
      auditing_status = #{record.auditingStatus,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=VARCHAR},
      update_user = #{record.updateUser,jdbcType=BIGINT},
      credential_pic = #{record.credentialPic,jdbcType=BIGINT},
      credential_pic2 = #{record.credentialPic2,jdbcType=BIGINT},
      credential_hand = #{record.credentialHand,jdbcType=BIGINT},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yonyou.scf.common.entity.DigitalCertificate" >
    update digital_certificate
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="signBankId != null" >
        sign_bank_id = #{signBankId,jdbcType=BIGINT},
      </if>
      <if test="sn != null" >
        sn = #{sn,jdbcType=VARCHAR},
      </if>
      <if test="dn != null" >
        dn = #{dn,jdbcType=VARCHAR},
      </if>
      <if test="ca != null" >
        ca = #{ca,jdbcType=VARCHAR},
      </if>
      <if test="expireDate != null" >
        expire_date = #{expireDate,jdbcType=VARCHAR},
      </if>
      <if test="fileId != null" >
        file_id = #{fileId,jdbcType=BIGINT},
      </if>
      <if test="bindStatus != null" >
        bind_status = #{bindStatus,jdbcType=VARCHAR},
      </if>
      <if test="auditingStatus != null" >
        auditing_status = #{auditingStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="credentialPic != null" >
        credential_pic = #{credentialPic,jdbcType=BIGINT},
      </if>
      <if test="credentialPic2 != null" >
        credential_pic2 = #{credentialPic2,jdbcType=BIGINT},
      </if>
      <if test="credentialHand != null" >
        credential_hand = #{credentialHand,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yonyou.scf.common.entity.DigitalCertificate" >
    update digital_certificate
    set user_id = #{userId,jdbcType=BIGINT},
      sign_bank_id = #{signBankId,jdbcType=BIGINT},
      sn = #{sn,jdbcType=VARCHAR},
      dn = #{dn,jdbcType=VARCHAR},
      ca = #{ca,jdbcType=VARCHAR},
      expire_date = #{expireDate,jdbcType=VARCHAR},
      file_id = #{fileId,jdbcType=BIGINT},
      bind_status = #{bindStatus,jdbcType=VARCHAR},
      auditing_status = #{auditingStatus,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=BIGINT},
      credential_pic = #{credentialPic,jdbcType=BIGINT},
      credential_pic2 = #{credentialPic2,jdbcType=BIGINT},
      credential_hand = #{credentialHand,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>