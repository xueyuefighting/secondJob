<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yonyou.scf.common.mapper.auto.CreditMapper" >
  <resultMap id="BaseResultMap" type="com.yonyou.scf.common.entity.Credit" >
    <id column="credit_id" property="creditId" jdbcType="BIGINT" />
    <result column="product_id" property="productId" jdbcType="BIGINT" />
    <result column="agency_id" property="agencyId" jdbcType="BIGINT" />
    <result column="all_amount" property="allAmount" jdbcType="BIGINT" />
    <result column="use_amount" property="useAmount" jdbcType="BIGINT" />
    <result column="credit_begin_date" property="creditBeginDate" jdbcType="VARCHAR" />
    <result column="credit_end_date" property="creditEndDate" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="enabled" property="enabled" jdbcType="VARCHAR" />
    <result column="platform_id" property="platformId" jdbcType="VARCHAR" />
    <result column="reback_amount" property="rebackAmount" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="VARCHAR" />
    <result column="update_user" property="updateUser" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    credit_id, product_id, agency_id, all_amount, use_amount, credit_begin_date, credit_end_date, 
    status, enabled, platform_id, reback_amount, create_time, create_user, update_time, 
    update_user
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yonyou.scf.common.entity.CreditExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from credit
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from credit
    where credit_id = #{creditId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from credit
    where credit_id = #{creditId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yonyou.scf.common.entity.CreditExample" >
    delete from credit
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yonyou.scf.common.entity.Credit" >
    insert into credit (credit_id, product_id, agency_id, 
      all_amount, use_amount, credit_begin_date, 
      credit_end_date, status, enabled, 
      platform_id, reback_amount, create_time, 
      create_user, update_time, update_user
      )
    values (#{creditId,jdbcType=BIGINT}, #{productId,jdbcType=BIGINT}, #{agencyId,jdbcType=BIGINT}, 
      #{allAmount,jdbcType=BIGINT}, #{useAmount,jdbcType=BIGINT}, #{creditBeginDate,jdbcType=VARCHAR}, 
      #{creditEndDate,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{enabled,jdbcType=VARCHAR}, 
      #{platformId,jdbcType=VARCHAR}, #{rebackAmount,jdbcType=BIGINT}, #{createTime,jdbcType=VARCHAR}, 
      #{createUser,jdbcType=BIGINT}, #{updateTime,jdbcType=VARCHAR}, #{updateUser,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yonyou.scf.common.entity.Credit" >
    insert into credit
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="creditId != null" >
        credit_id,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="agencyId != null" >
        agency_id,
      </if>
      <if test="allAmount != null" >
        all_amount,
      </if>
      <if test="useAmount != null" >
        use_amount,
      </if>
      <if test="creditBeginDate != null" >
        credit_begin_date,
      </if>
      <if test="creditEndDate != null" >
        credit_end_date,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="enabled != null" >
        enabled,
      </if>
      <if test="platformId != null" >
        platform_id,
      </if>
      <if test="rebackAmount != null" >
        reback_amount,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="creditId != null" >
        #{creditId,jdbcType=BIGINT},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=BIGINT},
      </if>
      <if test="agencyId != null" >
        #{agencyId,jdbcType=BIGINT},
      </if>
      <if test="allAmount != null" >
        #{allAmount,jdbcType=BIGINT},
      </if>
      <if test="useAmount != null" >
        #{useAmount,jdbcType=BIGINT},
      </if>
      <if test="creditBeginDate != null" >
        #{creditBeginDate,jdbcType=VARCHAR},
      </if>
      <if test="creditEndDate != null" >
        #{creditEndDate,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        #{enabled,jdbcType=VARCHAR},
      </if>
      <if test="platformId != null" >
        #{platformId,jdbcType=VARCHAR},
      </if>
      <if test="rebackAmount != null" >
        #{rebackAmount,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yonyou.scf.common.entity.CreditExample" resultType="java.lang.Integer" >
    select count(*) from credit
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update credit
    <set >
      <if test="record.creditId != null" >
        credit_id = #{record.creditId,jdbcType=BIGINT},
      </if>
      <if test="record.productId != null" >
        product_id = #{record.productId,jdbcType=BIGINT},
      </if>
      <if test="record.agencyId != null" >
        agency_id = #{record.agencyId,jdbcType=BIGINT},
      </if>
      <if test="record.allAmount != null" >
        all_amount = #{record.allAmount,jdbcType=BIGINT},
      </if>
      <if test="record.useAmount != null" >
        use_amount = #{record.useAmount,jdbcType=BIGINT},
      </if>
      <if test="record.creditBeginDate != null" >
        credit_begin_date = #{record.creditBeginDate,jdbcType=VARCHAR},
      </if>
      <if test="record.creditEndDate != null" >
        credit_end_date = #{record.creditEndDate,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.enabled != null" >
        enabled = #{record.enabled,jdbcType=VARCHAR},
      </if>
      <if test="record.platformId != null" >
        platform_id = #{record.platformId,jdbcType=VARCHAR},
      </if>
      <if test="record.rebackAmount != null" >
        reback_amount = #{record.rebackAmount,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUser != null" >
        update_user = #{record.updateUser,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update credit
    set credit_id = #{record.creditId,jdbcType=BIGINT},
      product_id = #{record.productId,jdbcType=BIGINT},
      agency_id = #{record.agencyId,jdbcType=BIGINT},
      all_amount = #{record.allAmount,jdbcType=BIGINT},
      use_amount = #{record.useAmount,jdbcType=BIGINT},
      credit_begin_date = #{record.creditBeginDate,jdbcType=VARCHAR},
      credit_end_date = #{record.creditEndDate,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      enabled = #{record.enabled,jdbcType=VARCHAR},
      platform_id = #{record.platformId,jdbcType=VARCHAR},
      reback_amount = #{record.rebackAmount,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=VARCHAR},
      update_user = #{record.updateUser,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yonyou.scf.common.entity.Credit" >
    update credit
    <set >
      <if test="productId != null" >
        product_id = #{productId,jdbcType=BIGINT},
      </if>
      <if test="agencyId != null" >
        agency_id = #{agencyId,jdbcType=BIGINT},
      </if>
      <if test="allAmount != null" >
        all_amount = #{allAmount,jdbcType=BIGINT},
      </if>
      <if test="useAmount != null" >
        use_amount = #{useAmount,jdbcType=BIGINT},
      </if>
      <if test="creditBeginDate != null" >
        credit_begin_date = #{creditBeginDate,jdbcType=VARCHAR},
      </if>
      <if test="creditEndDate != null" >
        credit_end_date = #{creditEndDate,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        enabled = #{enabled,jdbcType=VARCHAR},
      </if>
      <if test="platformId != null" >
        platform_id = #{platformId,jdbcType=VARCHAR},
      </if>
      <if test="rebackAmount != null" >
        reback_amount = #{rebackAmount,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
    </set>
    where credit_id = #{creditId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yonyou.scf.common.entity.Credit" >
    update credit
    set product_id = #{productId,jdbcType=BIGINT},
      agency_id = #{agencyId,jdbcType=BIGINT},
      all_amount = #{allAmount,jdbcType=BIGINT},
      use_amount = #{useAmount,jdbcType=BIGINT},
      credit_begin_date = #{creditBeginDate,jdbcType=VARCHAR},
      credit_end_date = #{creditEndDate,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=VARCHAR},
      platform_id = #{platformId,jdbcType=VARCHAR},
      reback_amount = #{rebackAmount,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=BIGINT}
    where credit_id = #{creditId,jdbcType=BIGINT}
  </update>
</mapper>