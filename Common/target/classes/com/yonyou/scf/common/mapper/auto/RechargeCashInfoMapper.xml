<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yonyou.scf.common.mapper.auto.RechargeCashInfoMapper" >
  <resultMap id="BaseResultMap" type="com.yonyou.scf.common.entity.RechargeCashInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="pay_time" property="payTime" jdbcType="VARCHAR" />
    <result column="mem_num" property="memNum" jdbcType="VARCHAR" />
    <result column="mem_id" property="memId" jdbcType="BIGINT" />
    <result column="role_id" property="roleId" jdbcType="BIGINT" />
    <result column="company_id" property="companyId" jdbcType="BIGINT" />
    <result column="occur_amount" property="occurAmount" jdbcType="BIGINT" />
    <result column="pay_type" property="payType" jdbcType="VARCHAR" />
    <result column="pay_status" property="payStatus" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, pay_time, mem_num, mem_id, role_id, company_id, occur_amount, pay_type, pay_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yonyou.scf.common.entity.RechargeCashInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from recharge_cash_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from recharge_cash_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from recharge_cash_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yonyou.scf.common.entity.RechargeCashInfoExample" >
    delete from recharge_cash_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yonyou.scf.common.entity.RechargeCashInfo" >
    insert into recharge_cash_info (id, pay_time, mem_num, 
      mem_id, role_id, company_id, 
      occur_amount, pay_type, pay_status
      )
    values (#{id,jdbcType=BIGINT}, #{payTime,jdbcType=VARCHAR}, #{memNum,jdbcType=VARCHAR}, 
      #{memId,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT}, #{companyId,jdbcType=BIGINT}, 
      #{occurAmount,jdbcType=BIGINT}, #{payType,jdbcType=VARCHAR}, #{payStatus,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yonyou.scf.common.entity.RechargeCashInfo" >
    insert into recharge_cash_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="memNum != null" >
        mem_num,
      </if>
      <if test="memId != null" >
        mem_id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="occurAmount != null" >
        occur_amount,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="payStatus != null" >
        pay_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=VARCHAR},
      </if>
      <if test="memNum != null" >
        #{memNum,jdbcType=VARCHAR},
      </if>
      <if test="memId != null" >
        #{memId,jdbcType=BIGINT},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="occurAmount != null" >
        #{occurAmount,jdbcType=BIGINT},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=VARCHAR},
      </if>
      <if test="payStatus != null" >
        #{payStatus,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yonyou.scf.common.entity.RechargeCashInfoExample" resultType="java.lang.Integer" >
    select count(*) from recharge_cash_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update recharge_cash_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.payTime != null" >
        pay_time = #{record.payTime,jdbcType=VARCHAR},
      </if>
      <if test="record.memNum != null" >
        mem_num = #{record.memNum,jdbcType=VARCHAR},
      </if>
      <if test="record.memId != null" >
        mem_id = #{record.memId,jdbcType=BIGINT},
      </if>
      <if test="record.roleId != null" >
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.companyId != null" >
        company_id = #{record.companyId,jdbcType=BIGINT},
      </if>
      <if test="record.occurAmount != null" >
        occur_amount = #{record.occurAmount,jdbcType=BIGINT},
      </if>
      <if test="record.payType != null" >
        pay_type = #{record.payType,jdbcType=VARCHAR},
      </if>
      <if test="record.payStatus != null" >
        pay_status = #{record.payStatus,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update recharge_cash_info
    set id = #{record.id,jdbcType=BIGINT},
      pay_time = #{record.payTime,jdbcType=VARCHAR},
      mem_num = #{record.memNum,jdbcType=VARCHAR},
      mem_id = #{record.memId,jdbcType=BIGINT},
      role_id = #{record.roleId,jdbcType=BIGINT},
      company_id = #{record.companyId,jdbcType=BIGINT},
      occur_amount = #{record.occurAmount,jdbcType=BIGINT},
      pay_type = #{record.payType,jdbcType=VARCHAR},
      pay_status = #{record.payStatus,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yonyou.scf.common.entity.RechargeCashInfo" >
    update recharge_cash_info
    <set >
      <if test="payTime != null" >
        pay_time = #{payTime,jdbcType=VARCHAR},
      </if>
      <if test="memNum != null" >
        mem_num = #{memNum,jdbcType=VARCHAR},
      </if>
      <if test="memId != null" >
        mem_id = #{memId,jdbcType=BIGINT},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=BIGINT},
      </if>
      <if test="occurAmount != null" >
        occur_amount = #{occurAmount,jdbcType=BIGINT},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=VARCHAR},
      </if>
      <if test="payStatus != null" >
        pay_status = #{payStatus,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yonyou.scf.common.entity.RechargeCashInfo" >
    update recharge_cash_info
    set pay_time = #{payTime,jdbcType=VARCHAR},
      mem_num = #{memNum,jdbcType=VARCHAR},
      mem_id = #{memId,jdbcType=BIGINT},
      role_id = #{roleId,jdbcType=BIGINT},
      company_id = #{companyId,jdbcType=BIGINT},
      occur_amount = #{occurAmount,jdbcType=BIGINT},
      pay_type = #{payType,jdbcType=VARCHAR},
      pay_status = #{payStatus,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>