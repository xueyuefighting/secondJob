<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yonyou.scf.common.mapper.auto.BindCardMapper" >
  <resultMap id="BaseResultMap" type="com.yonyou.scf.common.entity.BindCard" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="mem_id" property="memId" jdbcType="BIGINT" />
    <result column="bind_open_bank" property="bindOpenBank" jdbcType="CHAR" />
    <result column="bind_open_org_num" property="bindOpenOrgNum" jdbcType="CHAR" />
    <result column="open_bank_province" property="openBankProvince" jdbcType="CHAR" />
    <result column="open_bank_city" property="openBankCity" jdbcType="CHAR" />
    <result column="open_bank_branch_rows" property="openBankBranchRows" jdbcType="CHAR" />
    <result column="bind_acc_num" property="bindAccNum" jdbcType="CHAR" />
    <result column="bind_acc_name" property="bindAccName" jdbcType="CHAR" />
    <result column="is_cross_line" property="isCrossLine" jdbcType="CHAR" />
    <result column="card_status" property="cardStatus" jdbcType="CHAR" />
    <result column="customer_id" property="customerId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="VARCHAR" />
    <result column="update_user" property="updateUser" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, mem_id, bind_open_bank, bind_open_org_num, open_bank_province, open_bank_city, 
    open_bank_branch_rows, bind_acc_num, bind_acc_name, is_cross_line, card_status, customer_id, 
    create_time, create_user, update_time, update_user
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yonyou.scf.common.entity.BindCardExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bind_card
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from bind_card
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from bind_card
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yonyou.scf.common.entity.BindCardExample" >
    delete from bind_card
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yonyou.scf.common.entity.BindCard" >
    insert into bind_card (id, mem_id, bind_open_bank, 
      bind_open_org_num, open_bank_province, open_bank_city, 
      open_bank_branch_rows, bind_acc_num, bind_acc_name, 
      is_cross_line, card_status, customer_id, 
      create_time, create_user, update_time, 
      update_user)
    values (#{id,jdbcType=BIGINT}, #{memId,jdbcType=BIGINT}, #{bindOpenBank,jdbcType=CHAR}, 
      #{bindOpenOrgNum,jdbcType=CHAR}, #{openBankProvince,jdbcType=CHAR}, #{openBankCity,jdbcType=CHAR}, 
      #{openBankBranchRows,jdbcType=CHAR}, #{bindAccNum,jdbcType=CHAR}, #{bindAccName,jdbcType=CHAR}, 
      #{isCrossLine,jdbcType=CHAR}, #{cardStatus,jdbcType=CHAR}, #{customerId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=VARCHAR}, #{createUser,jdbcType=BIGINT}, #{updateTime,jdbcType=VARCHAR}, 
      #{updateUser,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.yonyou.scf.common.entity.BindCard" >
    insert into bind_card
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="memId != null" >
        mem_id,
      </if>
      <if test="bindOpenBank != null" >
        bind_open_bank,
      </if>
      <if test="bindOpenOrgNum != null" >
        bind_open_org_num,
      </if>
      <if test="openBankProvince != null" >
        open_bank_province,
      </if>
      <if test="openBankCity != null" >
        open_bank_city,
      </if>
      <if test="openBankBranchRows != null" >
        open_bank_branch_rows,
      </if>
      <if test="bindAccNum != null" >
        bind_acc_num,
      </if>
      <if test="bindAccName != null" >
        bind_acc_name,
      </if>
      <if test="isCrossLine != null" >
        is_cross_line,
      </if>
      <if test="cardStatus != null" >
        card_status,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="memId != null" >
        #{memId,jdbcType=BIGINT},
      </if>
      <if test="bindOpenBank != null" >
        #{bindOpenBank,jdbcType=CHAR},
      </if>
      <if test="bindOpenOrgNum != null" >
        #{bindOpenOrgNum,jdbcType=CHAR},
      </if>
      <if test="openBankProvince != null" >
        #{openBankProvince,jdbcType=CHAR},
      </if>
      <if test="openBankCity != null" >
        #{openBankCity,jdbcType=CHAR},
      </if>
      <if test="openBankBranchRows != null" >
        #{openBankBranchRows,jdbcType=CHAR},
      </if>
      <if test="bindAccNum != null" >
        #{bindAccNum,jdbcType=CHAR},
      </if>
      <if test="bindAccName != null" >
        #{bindAccName,jdbcType=CHAR},
      </if>
      <if test="isCrossLine != null" >
        #{isCrossLine,jdbcType=CHAR},
      </if>
      <if test="cardStatus != null" >
        #{cardStatus,jdbcType=CHAR},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yonyou.scf.common.entity.BindCardExample" resultType="java.lang.Integer" >
    select count(*) from bind_card
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bind_card
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.memId != null" >
        mem_id = #{record.memId,jdbcType=BIGINT},
      </if>
      <if test="record.bindOpenBank != null" >
        bind_open_bank = #{record.bindOpenBank,jdbcType=CHAR},
      </if>
      <if test="record.bindOpenOrgNum != null" >
        bind_open_org_num = #{record.bindOpenOrgNum,jdbcType=CHAR},
      </if>
      <if test="record.openBankProvince != null" >
        open_bank_province = #{record.openBankProvince,jdbcType=CHAR},
      </if>
      <if test="record.openBankCity != null" >
        open_bank_city = #{record.openBankCity,jdbcType=CHAR},
      </if>
      <if test="record.openBankBranchRows != null" >
        open_bank_branch_rows = #{record.openBankBranchRows,jdbcType=CHAR},
      </if>
      <if test="record.bindAccNum != null" >
        bind_acc_num = #{record.bindAccNum,jdbcType=CHAR},
      </if>
      <if test="record.bindAccName != null" >
        bind_acc_name = #{record.bindAccName,jdbcType=CHAR},
      </if>
      <if test="record.isCrossLine != null" >
        is_cross_line = #{record.isCrossLine,jdbcType=CHAR},
      </if>
      <if test="record.cardStatus != null" >
        card_status = #{record.cardStatus,jdbcType=CHAR},
      </if>
      <if test="record.customerId != null" >
        customer_id = #{record.customerId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUser != null" >
        update_user = #{record.updateUser,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bind_card
    set id = #{record.id,jdbcType=BIGINT},
      mem_id = #{record.memId,jdbcType=BIGINT},
      bind_open_bank = #{record.bindOpenBank,jdbcType=CHAR},
      bind_open_org_num = #{record.bindOpenOrgNum,jdbcType=CHAR},
      open_bank_province = #{record.openBankProvince,jdbcType=CHAR},
      open_bank_city = #{record.openBankCity,jdbcType=CHAR},
      open_bank_branch_rows = #{record.openBankBranchRows,jdbcType=CHAR},
      bind_acc_num = #{record.bindAccNum,jdbcType=CHAR},
      bind_acc_name = #{record.bindAccName,jdbcType=CHAR},
      is_cross_line = #{record.isCrossLine,jdbcType=CHAR},
      card_status = #{record.cardStatus,jdbcType=CHAR},
      customer_id = #{record.customerId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=VARCHAR},
      update_user = #{record.updateUser,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yonyou.scf.common.entity.BindCard" >
    update bind_card
    <set >
      <if test="memId != null" >
        mem_id = #{memId,jdbcType=BIGINT},
      </if>
      <if test="bindOpenBank != null" >
        bind_open_bank = #{bindOpenBank,jdbcType=CHAR},
      </if>
      <if test="bindOpenOrgNum != null" >
        bind_open_org_num = #{bindOpenOrgNum,jdbcType=CHAR},
      </if>
      <if test="openBankProvince != null" >
        open_bank_province = #{openBankProvince,jdbcType=CHAR},
      </if>
      <if test="openBankCity != null" >
        open_bank_city = #{openBankCity,jdbcType=CHAR},
      </if>
      <if test="openBankBranchRows != null" >
        open_bank_branch_rows = #{openBankBranchRows,jdbcType=CHAR},
      </if>
      <if test="bindAccNum != null" >
        bind_acc_num = #{bindAccNum,jdbcType=CHAR},
      </if>
      <if test="bindAccName != null" >
        bind_acc_name = #{bindAccName,jdbcType=CHAR},
      </if>
      <if test="isCrossLine != null" >
        is_cross_line = #{isCrossLine,jdbcType=CHAR},
      </if>
      <if test="cardStatus != null" >
        card_status = #{cardStatus,jdbcType=CHAR},
      </if>
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yonyou.scf.common.entity.BindCard" >
    update bind_card
    set mem_id = #{memId,jdbcType=BIGINT},
      bind_open_bank = #{bindOpenBank,jdbcType=CHAR},
      bind_open_org_num = #{bindOpenOrgNum,jdbcType=CHAR},
      open_bank_province = #{openBankProvince,jdbcType=CHAR},
      open_bank_city = #{openBankCity,jdbcType=CHAR},
      open_bank_branch_rows = #{openBankBranchRows,jdbcType=CHAR},
      bind_acc_num = #{bindAccNum,jdbcType=CHAR},
      bind_acc_name = #{bindAccName,jdbcType=CHAR},
      is_cross_line = #{isCrossLine,jdbcType=CHAR},
      card_status = #{cardStatus,jdbcType=CHAR},
      customer_id = #{customerId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>