package com.yonyou.scf.common.helper;

import com.yonyou.scf.common.constant.DefaultConst;
import com.yonyou.scf.common.constant.MessengerErrorMsgConstants;
import com.yonyou.scf.common.constant.URLConst;
import com.yonyou.scf.common.output.ResultBean;
import com.yonyou.scf.common.system.CodeException;
import com.yonyou.scf.common.tx.mail.SMSSend;
import com.yonyou.scf.common.util.net.HttpClientUtil;

public class SMSHelper {


	public static Boolean doSend(String platformId, String mobile, String text, String txNo) throws CodeException {

		ResultBean rb = new ResultBean();

		try {

			SMSSend sms = new SMSSend();
			sms.setMobile(mobile);
			sms.setText(text);
			sms.setTxNo(txNo);

			System.out.println("SMSHelper:request:" + sms.toString());

			// 发消息
			String responseText = HttpClientUtil.post(URLConst.URL_SMS + "/Send", sms);
			System.out.println("SMSHelper:responseText:" + responseText);

			rb = new ResultBean(responseText);

			if (!DefaultConst.SUCCESS_RESPONSE_CODE.equals(rb.getCode())) {
				throw new CodeException(MessengerErrorMsgConstants.ERR_2001_CODE, "短信发送失败");
			}
			
			System.out.println("SMSHelper:response:" + rb.toString());

			// TxResponse txRes = new TxResponse(responseText);
			// // TODO：此处的处理有待商榷
			// // 返回消息预处理，在签名验签失败时，也保留原始错误信息
			// if (null != txRes) {
			// rb = txRes.getJsonMessage();
			// System.out.println("SMSHelper:responseText:rb:" + rb.toString());
			// }
			// if (StringUtil.isNotEmpty(txRes.getJsonSignature()) &&
			// !"null".equalsIgnoreCase(txRes.getJsonSignature())) {
			// // 响应报文验签
			// SignatureHelper.doVerify(txRes, platformId);
			// } else {
			// // 此时基本可判断为Messenger模块自身错误，不存在签名信息，可否直接返回rb呢？
			// if (DefaultConst.SUCCESS_RESPONSE_CODE.equals(rb.getCode())) {
			// throw new CodeException(DefaultConst.ERR_2001_CODE,
			// DefaultConst.ERR_2001_MSG);
			// }
			// }

		} catch (CodeException ce) {
			ce.printStackTrace();
			throw ce;
		} catch (Exception e) {
			System.out.println("ERROR : " + e.toString());
			e.printStackTrace();
			throw new CodeException(MessengerErrorMsgConstants.ERR_2001_CODE, MessengerErrorMsgConstants.ERR_2001_MSG);
		}

		return true;

		// return rb;
	}
}
