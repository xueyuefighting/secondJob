<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yonyou.scf.common.mapper.auto.RepaymentScheduleMapper" >
  <resultMap id="BaseResultMap" type="com.yonyou.scf.common.entity.RepaymentSchedule" >
    <id column="rs_id" property="rsId" jdbcType="BIGINT" />
    <result column="capital_id" property="capitalId" jdbcType="BIGINT" />
    <result column="loan_id" property="loanId" jdbcType="BIGINT" />
    <result column="finance_id" property="financeId" jdbcType="BIGINT" />
    <result column="finance_amount" property="financeAmount" jdbcType="BIGINT" />
    <result column="loan_amount" property="loanAmount" jdbcType="BIGINT" />
    <result column="business_number" property="businessNumber" jdbcType="VARCHAR" />
    <result column="member_number" property="memberNumber" jdbcType="VARCHAR" />
    <result column="pen_number" property="penNumber" jdbcType="CHAR" />
    <result column="loan_account" property="loanAccount" jdbcType="VARCHAR" />
    <result column="loan_debit_number" property="loanDebitNumber" jdbcType="VARCHAR" />
    <result column="product_code" property="productCode" jdbcType="VARCHAR" />
    <result column="product_name" property="productName" jdbcType="VARCHAR" />
    <result column="client_number" property="clientNumber" jdbcType="VARCHAR" />
    <result column="client_name" property="clientName" jdbcType="VARCHAR" />
    <result column="contract_amount" property="contractAmount" jdbcType="BIGINT" />
    <result column="borrow_amount" property="borrowAmount" jdbcType="BIGINT" />
    <result column="ym_rate_makr" property="ymRateMakr" jdbcType="VARCHAR" />
    <result column="annual_interest_rate" property="annualInterestRate" jdbcType="BIGINT" />
    <result column="repayment" property="repayment" jdbcType="VARCHAR" />
    <result column="equal_rules" property="equalRules" jdbcType="VARCHAR" />
    <result column="total_periods_number" property="totalPeriodsNumber" jdbcType="CHAR" />
    <result column="current_periods_number" property="currentPeriodsNumber" jdbcType="CHAR" />
    <result column="overdue_periods_number" property="overduePeriodsNumber" jdbcType="CHAR" />
    <result column="remaining_periods_number" property="remainingPeriodsNumber" jdbcType="CHAR" />
    <result column="over_periods_number" property="overPeriodsNumber" jdbcType="CHAR" />
    <result column="total_already_principal" property="totalAlreadyPrincipal" jdbcType="BIGINT" />
    <result column="total_already_interest" property="totalAlreadyInterest" jdbcType="BIGINT" />
    <result column="loan_form" property="loanForm" jdbcType="VARCHAR" />
    <result column="loan_account_state" property="loanAccountState" jdbcType="VARCHAR" />
    <result column="accrued_accrual_state" property="accruedAccrualState" jdbcType="VARCHAR" />
    <result column="total_repayment_amount" property="totalRepaymentAmount" jdbcType="BIGINT" />
    <result column="each_repayment_amount" property="eachRepaymentAmount" jdbcType="BIGINT" />
    <result column="retained_amount" property="retainedAmount" jdbcType="BIGINT" />
    <result column="repayment_cycle" property="repaymentCycle" jdbcType="CHAR" />
    <result column="principal_segmentation" property="principalSegmentation" jdbcType="VARCHAR" />
    <result column="start_date" property="startDate" jdbcType="CHAR" />
    <result column="end_date" property="endDate" jdbcType="CHAR" />
    <result column="last_repayment_date" property="lastRepaymentDate" jdbcType="CHAR" />
    <result column="normal_principal" property="normalPrincipal" jdbcType="BIGINT" />
    <result column="writeoff_principal" property="writeoffPrincipal" jdbcType="BIGINT" />
    <result column="writeoff_interest" property="writeoffInterest" jdbcType="BIGINT" />
    <result column="child_periods" property="childPeriods" jdbcType="VARCHAR" />
    <result column="transaction_date" property="transactionDate" jdbcType="CHAR" />
    <result column="accumulated_overdue_principal" property="accumulatedOverduePrincipal" jdbcType="BIGINT" />
    <result column="accumulated_overdue" property="accumulatedOverdue" jdbcType="BIGINT" />
    <result column="accumulate_principal" property="accumulatePrincipal" jdbcType="BIGINT" />
    <result column="accumulate_interest" property="accumulateInterest" jdbcType="BIGINT" />
    <result column="data_from" property="dataFrom" jdbcType="CHAR" />
    <result column="create_user" property="createUser" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="effective" property="effective" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    rs_id, capital_id, loan_id, finance_id, finance_amount, loan_amount, business_number, 
    member_number, pen_number, loan_account, loan_debit_number, product_code, product_name, 
    client_number, client_name, contract_amount, borrow_amount, ym_rate_makr, annual_interest_rate, 
    repayment, equal_rules, total_periods_number, current_periods_number, overdue_periods_number, 
    remaining_periods_number, over_periods_number, total_already_principal, total_already_interest, 
    loan_form, loan_account_state, accrued_accrual_state, total_repayment_amount, each_repayment_amount, 
    retained_amount, repayment_cycle, principal_segmentation, start_date, end_date, last_repayment_date, 
    normal_principal, writeoff_principal, writeoff_interest, child_periods, transaction_date, 
    accumulated_overdue_principal, accumulated_overdue, accumulate_principal, accumulate_interest, 
    data_from, create_user, create_time, effective
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yonyou.scf.common.entity.RepaymentScheduleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from repayment_schedule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from repayment_schedule
    where rs_id = #{rsId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from repayment_schedule
    where rs_id = #{rsId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yonyou.scf.common.entity.RepaymentScheduleExample" >
    delete from repayment_schedule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yonyou.scf.common.entity.RepaymentSchedule" >
    insert into repayment_schedule (rs_id, capital_id, loan_id, 
      finance_id, finance_amount, loan_amount, 
      business_number, member_number, pen_number, 
      loan_account, loan_debit_number, product_code, 
      product_name, client_number, client_name, 
      contract_amount, borrow_amount, ym_rate_makr, 
      annual_interest_rate, repayment, equal_rules, 
      total_periods_number, current_periods_number, overdue_periods_number, 
      remaining_periods_number, over_periods_number, total_already_principal, 
      total_already_interest, loan_form, loan_account_state, 
      accrued_accrual_state, total_repayment_amount, 
      each_repayment_amount, retained_amount, repayment_cycle, 
      principal_segmentation, start_date, end_date, 
      last_repayment_date, normal_principal, writeoff_principal, 
      writeoff_interest, child_periods, transaction_date, 
      accumulated_overdue_principal, accumulated_overdue, 
      accumulate_principal, accumulate_interest, 
      data_from, create_user, create_time, 
      effective)
    values (#{rsId,jdbcType=BIGINT}, #{capitalId,jdbcType=BIGINT}, #{loanId,jdbcType=BIGINT}, 
      #{financeId,jdbcType=BIGINT}, #{financeAmount,jdbcType=BIGINT}, #{loanAmount,jdbcType=BIGINT}, 
      #{businessNumber,jdbcType=VARCHAR}, #{memberNumber,jdbcType=VARCHAR}, #{penNumber,jdbcType=CHAR}, 
      #{loanAccount,jdbcType=VARCHAR}, #{loanDebitNumber,jdbcType=VARCHAR}, #{productCode,jdbcType=VARCHAR}, 
      #{productName,jdbcType=VARCHAR}, #{clientNumber,jdbcType=VARCHAR}, #{clientName,jdbcType=VARCHAR}, 
      #{contractAmount,jdbcType=BIGINT}, #{borrowAmount,jdbcType=BIGINT}, #{ymRateMakr,jdbcType=VARCHAR}, 
      #{annualInterestRate,jdbcType=BIGINT}, #{repayment,jdbcType=VARCHAR}, #{equalRules,jdbcType=VARCHAR}, 
      #{totalPeriodsNumber,jdbcType=CHAR}, #{currentPeriodsNumber,jdbcType=CHAR}, #{overduePeriodsNumber,jdbcType=CHAR}, 
      #{remainingPeriodsNumber,jdbcType=CHAR}, #{overPeriodsNumber,jdbcType=CHAR}, #{totalAlreadyPrincipal,jdbcType=BIGINT}, 
      #{totalAlreadyInterest,jdbcType=BIGINT}, #{loanForm,jdbcType=VARCHAR}, #{loanAccountState,jdbcType=VARCHAR}, 
      #{accruedAccrualState,jdbcType=VARCHAR}, #{totalRepaymentAmount,jdbcType=BIGINT}, 
      #{eachRepaymentAmount,jdbcType=BIGINT}, #{retainedAmount,jdbcType=BIGINT}, #{repaymentCycle,jdbcType=CHAR}, 
      #{principalSegmentation,jdbcType=VARCHAR}, #{startDate,jdbcType=CHAR}, #{endDate,jdbcType=CHAR}, 
      #{lastRepaymentDate,jdbcType=CHAR}, #{normalPrincipal,jdbcType=BIGINT}, #{writeoffPrincipal,jdbcType=BIGINT}, 
      #{writeoffInterest,jdbcType=BIGINT}, #{childPeriods,jdbcType=VARCHAR}, #{transactionDate,jdbcType=CHAR}, 
      #{accumulatedOverduePrincipal,jdbcType=BIGINT}, #{accumulatedOverdue,jdbcType=BIGINT}, 
      #{accumulatePrincipal,jdbcType=BIGINT}, #{accumulateInterest,jdbcType=BIGINT}, 
      #{dataFrom,jdbcType=CHAR}, #{createUser,jdbcType=BIGINT}, #{createTime,jdbcType=VARCHAR}, 
      #{effective,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yonyou.scf.common.entity.RepaymentSchedule" >
    insert into repayment_schedule
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="rsId != null" >
        rs_id,
      </if>
      <if test="capitalId != null" >
        capital_id,
      </if>
      <if test="loanId != null" >
        loan_id,
      </if>
      <if test="financeId != null" >
        finance_id,
      </if>
      <if test="financeAmount != null" >
        finance_amount,
      </if>
      <if test="loanAmount != null" >
        loan_amount,
      </if>
      <if test="businessNumber != null" >
        business_number,
      </if>
      <if test="memberNumber != null" >
        member_number,
      </if>
      <if test="penNumber != null" >
        pen_number,
      </if>
      <if test="loanAccount != null" >
        loan_account,
      </if>
      <if test="loanDebitNumber != null" >
        loan_debit_number,
      </if>
      <if test="productCode != null" >
        product_code,
      </if>
      <if test="productName != null" >
        product_name,
      </if>
      <if test="clientNumber != null" >
        client_number,
      </if>
      <if test="clientName != null" >
        client_name,
      </if>
      <if test="contractAmount != null" >
        contract_amount,
      </if>
      <if test="borrowAmount != null" >
        borrow_amount,
      </if>
      <if test="ymRateMakr != null" >
        ym_rate_makr,
      </if>
      <if test="annualInterestRate != null" >
        annual_interest_rate,
      </if>
      <if test="repayment != null" >
        repayment,
      </if>
      <if test="equalRules != null" >
        equal_rules,
      </if>
      <if test="totalPeriodsNumber != null" >
        total_periods_number,
      </if>
      <if test="currentPeriodsNumber != null" >
        current_periods_number,
      </if>
      <if test="overduePeriodsNumber != null" >
        overdue_periods_number,
      </if>
      <if test="remainingPeriodsNumber != null" >
        remaining_periods_number,
      </if>
      <if test="overPeriodsNumber != null" >
        over_periods_number,
      </if>
      <if test="totalAlreadyPrincipal != null" >
        total_already_principal,
      </if>
      <if test="totalAlreadyInterest != null" >
        total_already_interest,
      </if>
      <if test="loanForm != null" >
        loan_form,
      </if>
      <if test="loanAccountState != null" >
        loan_account_state,
      </if>
      <if test="accruedAccrualState != null" >
        accrued_accrual_state,
      </if>
      <if test="totalRepaymentAmount != null" >
        total_repayment_amount,
      </if>
      <if test="eachRepaymentAmount != null" >
        each_repayment_amount,
      </if>
      <if test="retainedAmount != null" >
        retained_amount,
      </if>
      <if test="repaymentCycle != null" >
        repayment_cycle,
      </if>
      <if test="principalSegmentation != null" >
        principal_segmentation,
      </if>
      <if test="startDate != null" >
        start_date,
      </if>
      <if test="endDate != null" >
        end_date,
      </if>
      <if test="lastRepaymentDate != null" >
        last_repayment_date,
      </if>
      <if test="normalPrincipal != null" >
        normal_principal,
      </if>
      <if test="writeoffPrincipal != null" >
        writeoff_principal,
      </if>
      <if test="writeoffInterest != null" >
        writeoff_interest,
      </if>
      <if test="childPeriods != null" >
        child_periods,
      </if>
      <if test="transactionDate != null" >
        transaction_date,
      </if>
      <if test="accumulatedOverduePrincipal != null" >
        accumulated_overdue_principal,
      </if>
      <if test="accumulatedOverdue != null" >
        accumulated_overdue,
      </if>
      <if test="accumulatePrincipal != null" >
        accumulate_principal,
      </if>
      <if test="accumulateInterest != null" >
        accumulate_interest,
      </if>
      <if test="dataFrom != null" >
        data_from,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="effective != null" >
        effective,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="rsId != null" >
        #{rsId,jdbcType=BIGINT},
      </if>
      <if test="capitalId != null" >
        #{capitalId,jdbcType=BIGINT},
      </if>
      <if test="loanId != null" >
        #{loanId,jdbcType=BIGINT},
      </if>
      <if test="financeId != null" >
        #{financeId,jdbcType=BIGINT},
      </if>
      <if test="financeAmount != null" >
        #{financeAmount,jdbcType=BIGINT},
      </if>
      <if test="loanAmount != null" >
        #{loanAmount,jdbcType=BIGINT},
      </if>
      <if test="businessNumber != null" >
        #{businessNumber,jdbcType=VARCHAR},
      </if>
      <if test="memberNumber != null" >
        #{memberNumber,jdbcType=VARCHAR},
      </if>
      <if test="penNumber != null" >
        #{penNumber,jdbcType=CHAR},
      </if>
      <if test="loanAccount != null" >
        #{loanAccount,jdbcType=VARCHAR},
      </if>
      <if test="loanDebitNumber != null" >
        #{loanDebitNumber,jdbcType=VARCHAR},
      </if>
      <if test="productCode != null" >
        #{productCode,jdbcType=VARCHAR},
      </if>
      <if test="productName != null" >
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="clientNumber != null" >
        #{clientNumber,jdbcType=VARCHAR},
      </if>
      <if test="clientName != null" >
        #{clientName,jdbcType=VARCHAR},
      </if>
      <if test="contractAmount != null" >
        #{contractAmount,jdbcType=BIGINT},
      </if>
      <if test="borrowAmount != null" >
        #{borrowAmount,jdbcType=BIGINT},
      </if>
      <if test="ymRateMakr != null" >
        #{ymRateMakr,jdbcType=VARCHAR},
      </if>
      <if test="annualInterestRate != null" >
        #{annualInterestRate,jdbcType=BIGINT},
      </if>
      <if test="repayment != null" >
        #{repayment,jdbcType=VARCHAR},
      </if>
      <if test="equalRules != null" >
        #{equalRules,jdbcType=VARCHAR},
      </if>
      <if test="totalPeriodsNumber != null" >
        #{totalPeriodsNumber,jdbcType=CHAR},
      </if>
      <if test="currentPeriodsNumber != null" >
        #{currentPeriodsNumber,jdbcType=CHAR},
      </if>
      <if test="overduePeriodsNumber != null" >
        #{overduePeriodsNumber,jdbcType=CHAR},
      </if>
      <if test="remainingPeriodsNumber != null" >
        #{remainingPeriodsNumber,jdbcType=CHAR},
      </if>
      <if test="overPeriodsNumber != null" >
        #{overPeriodsNumber,jdbcType=CHAR},
      </if>
      <if test="totalAlreadyPrincipal != null" >
        #{totalAlreadyPrincipal,jdbcType=BIGINT},
      </if>
      <if test="totalAlreadyInterest != null" >
        #{totalAlreadyInterest,jdbcType=BIGINT},
      </if>
      <if test="loanForm != null" >
        #{loanForm,jdbcType=VARCHAR},
      </if>
      <if test="loanAccountState != null" >
        #{loanAccountState,jdbcType=VARCHAR},
      </if>
      <if test="accruedAccrualState != null" >
        #{accruedAccrualState,jdbcType=VARCHAR},
      </if>
      <if test="totalRepaymentAmount != null" >
        #{totalRepaymentAmount,jdbcType=BIGINT},
      </if>
      <if test="eachRepaymentAmount != null" >
        #{eachRepaymentAmount,jdbcType=BIGINT},
      </if>
      <if test="retainedAmount != null" >
        #{retainedAmount,jdbcType=BIGINT},
      </if>
      <if test="repaymentCycle != null" >
        #{repaymentCycle,jdbcType=CHAR},
      </if>
      <if test="principalSegmentation != null" >
        #{principalSegmentation,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null" >
        #{startDate,jdbcType=CHAR},
      </if>
      <if test="endDate != null" >
        #{endDate,jdbcType=CHAR},
      </if>
      <if test="lastRepaymentDate != null" >
        #{lastRepaymentDate,jdbcType=CHAR},
      </if>
      <if test="normalPrincipal != null" >
        #{normalPrincipal,jdbcType=BIGINT},
      </if>
      <if test="writeoffPrincipal != null" >
        #{writeoffPrincipal,jdbcType=BIGINT},
      </if>
      <if test="writeoffInterest != null" >
        #{writeoffInterest,jdbcType=BIGINT},
      </if>
      <if test="childPeriods != null" >
        #{childPeriods,jdbcType=VARCHAR},
      </if>
      <if test="transactionDate != null" >
        #{transactionDate,jdbcType=CHAR},
      </if>
      <if test="accumulatedOverduePrincipal != null" >
        #{accumulatedOverduePrincipal,jdbcType=BIGINT},
      </if>
      <if test="accumulatedOverdue != null" >
        #{accumulatedOverdue,jdbcType=BIGINT},
      </if>
      <if test="accumulatePrincipal != null" >
        #{accumulatePrincipal,jdbcType=BIGINT},
      </if>
      <if test="accumulateInterest != null" >
        #{accumulateInterest,jdbcType=BIGINT},
      </if>
      <if test="dataFrom != null" >
        #{dataFrom,jdbcType=CHAR},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="effective != null" >
        #{effective,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yonyou.scf.common.entity.RepaymentScheduleExample" resultType="java.lang.Integer" >
    select count(*) from repayment_schedule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update repayment_schedule
    <set >
      <if test="record.rsId != null" >
        rs_id = #{record.rsId,jdbcType=BIGINT},
      </if>
      <if test="record.capitalId != null" >
        capital_id = #{record.capitalId,jdbcType=BIGINT},
      </if>
      <if test="record.loanId != null" >
        loan_id = #{record.loanId,jdbcType=BIGINT},
      </if>
      <if test="record.financeId != null" >
        finance_id = #{record.financeId,jdbcType=BIGINT},
      </if>
      <if test="record.financeAmount != null" >
        finance_amount = #{record.financeAmount,jdbcType=BIGINT},
      </if>
      <if test="record.loanAmount != null" >
        loan_amount = #{record.loanAmount,jdbcType=BIGINT},
      </if>
      <if test="record.businessNumber != null" >
        business_number = #{record.businessNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.memberNumber != null" >
        member_number = #{record.memberNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.penNumber != null" >
        pen_number = #{record.penNumber,jdbcType=CHAR},
      </if>
      <if test="record.loanAccount != null" >
        loan_account = #{record.loanAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.loanDebitNumber != null" >
        loan_debit_number = #{record.loanDebitNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.productCode != null" >
        product_code = #{record.productCode,jdbcType=VARCHAR},
      </if>
      <if test="record.productName != null" >
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.clientNumber != null" >
        client_number = #{record.clientNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.clientName != null" >
        client_name = #{record.clientName,jdbcType=VARCHAR},
      </if>
      <if test="record.contractAmount != null" >
        contract_amount = #{record.contractAmount,jdbcType=BIGINT},
      </if>
      <if test="record.borrowAmount != null" >
        borrow_amount = #{record.borrowAmount,jdbcType=BIGINT},
      </if>
      <if test="record.ymRateMakr != null" >
        ym_rate_makr = #{record.ymRateMakr,jdbcType=VARCHAR},
      </if>
      <if test="record.annualInterestRate != null" >
        annual_interest_rate = #{record.annualInterestRate,jdbcType=BIGINT},
      </if>
      <if test="record.repayment != null" >
        repayment = #{record.repayment,jdbcType=VARCHAR},
      </if>
      <if test="record.equalRules != null" >
        equal_rules = #{record.equalRules,jdbcType=VARCHAR},
      </if>
      <if test="record.totalPeriodsNumber != null" >
        total_periods_number = #{record.totalPeriodsNumber,jdbcType=CHAR},
      </if>
      <if test="record.currentPeriodsNumber != null" >
        current_periods_number = #{record.currentPeriodsNumber,jdbcType=CHAR},
      </if>
      <if test="record.overduePeriodsNumber != null" >
        overdue_periods_number = #{record.overduePeriodsNumber,jdbcType=CHAR},
      </if>
      <if test="record.remainingPeriodsNumber != null" >
        remaining_periods_number = #{record.remainingPeriodsNumber,jdbcType=CHAR},
      </if>
      <if test="record.overPeriodsNumber != null" >
        over_periods_number = #{record.overPeriodsNumber,jdbcType=CHAR},
      </if>
      <if test="record.totalAlreadyPrincipal != null" >
        total_already_principal = #{record.totalAlreadyPrincipal,jdbcType=BIGINT},
      </if>
      <if test="record.totalAlreadyInterest != null" >
        total_already_interest = #{record.totalAlreadyInterest,jdbcType=BIGINT},
      </if>
      <if test="record.loanForm != null" >
        loan_form = #{record.loanForm,jdbcType=VARCHAR},
      </if>
      <if test="record.loanAccountState != null" >
        loan_account_state = #{record.loanAccountState,jdbcType=VARCHAR},
      </if>
      <if test="record.accruedAccrualState != null" >
        accrued_accrual_state = #{record.accruedAccrualState,jdbcType=VARCHAR},
      </if>
      <if test="record.totalRepaymentAmount != null" >
        total_repayment_amount = #{record.totalRepaymentAmount,jdbcType=BIGINT},
      </if>
      <if test="record.eachRepaymentAmount != null" >
        each_repayment_amount = #{record.eachRepaymentAmount,jdbcType=BIGINT},
      </if>
      <if test="record.retainedAmount != null" >
        retained_amount = #{record.retainedAmount,jdbcType=BIGINT},
      </if>
      <if test="record.repaymentCycle != null" >
        repayment_cycle = #{record.repaymentCycle,jdbcType=CHAR},
      </if>
      <if test="record.principalSegmentation != null" >
        principal_segmentation = #{record.principalSegmentation,jdbcType=VARCHAR},
      </if>
      <if test="record.startDate != null" >
        start_date = #{record.startDate,jdbcType=CHAR},
      </if>
      <if test="record.endDate != null" >
        end_date = #{record.endDate,jdbcType=CHAR},
      </if>
      <if test="record.lastRepaymentDate != null" >
        last_repayment_date = #{record.lastRepaymentDate,jdbcType=CHAR},
      </if>
      <if test="record.normalPrincipal != null" >
        normal_principal = #{record.normalPrincipal,jdbcType=BIGINT},
      </if>
      <if test="record.writeoffPrincipal != null" >
        writeoff_principal = #{record.writeoffPrincipal,jdbcType=BIGINT},
      </if>
      <if test="record.writeoffInterest != null" >
        writeoff_interest = #{record.writeoffInterest,jdbcType=BIGINT},
      </if>
      <if test="record.childPeriods != null" >
        child_periods = #{record.childPeriods,jdbcType=VARCHAR},
      </if>
      <if test="record.transactionDate != null" >
        transaction_date = #{record.transactionDate,jdbcType=CHAR},
      </if>
      <if test="record.accumulatedOverduePrincipal != null" >
        accumulated_overdue_principal = #{record.accumulatedOverduePrincipal,jdbcType=BIGINT},
      </if>
      <if test="record.accumulatedOverdue != null" >
        accumulated_overdue = #{record.accumulatedOverdue,jdbcType=BIGINT},
      </if>
      <if test="record.accumulatePrincipal != null" >
        accumulate_principal = #{record.accumulatePrincipal,jdbcType=BIGINT},
      </if>
      <if test="record.accumulateInterest != null" >
        accumulate_interest = #{record.accumulateInterest,jdbcType=BIGINT},
      </if>
      <if test="record.dataFrom != null" >
        data_from = #{record.dataFrom,jdbcType=CHAR},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.effective != null" >
        effective = #{record.effective,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update repayment_schedule
    set rs_id = #{record.rsId,jdbcType=BIGINT},
      capital_id = #{record.capitalId,jdbcType=BIGINT},
      loan_id = #{record.loanId,jdbcType=BIGINT},
      finance_id = #{record.financeId,jdbcType=BIGINT},
      finance_amount = #{record.financeAmount,jdbcType=BIGINT},
      loan_amount = #{record.loanAmount,jdbcType=BIGINT},
      business_number = #{record.businessNumber,jdbcType=VARCHAR},
      member_number = #{record.memberNumber,jdbcType=VARCHAR},
      pen_number = #{record.penNumber,jdbcType=CHAR},
      loan_account = #{record.loanAccount,jdbcType=VARCHAR},
      loan_debit_number = #{record.loanDebitNumber,jdbcType=VARCHAR},
      product_code = #{record.productCode,jdbcType=VARCHAR},
      product_name = #{record.productName,jdbcType=VARCHAR},
      client_number = #{record.clientNumber,jdbcType=VARCHAR},
      client_name = #{record.clientName,jdbcType=VARCHAR},
      contract_amount = #{record.contractAmount,jdbcType=BIGINT},
      borrow_amount = #{record.borrowAmount,jdbcType=BIGINT},
      ym_rate_makr = #{record.ymRateMakr,jdbcType=VARCHAR},
      annual_interest_rate = #{record.annualInterestRate,jdbcType=BIGINT},
      repayment = #{record.repayment,jdbcType=VARCHAR},
      equal_rules = #{record.equalRules,jdbcType=VARCHAR},
      total_periods_number = #{record.totalPeriodsNumber,jdbcType=CHAR},
      current_periods_number = #{record.currentPeriodsNumber,jdbcType=CHAR},
      overdue_periods_number = #{record.overduePeriodsNumber,jdbcType=CHAR},
      remaining_periods_number = #{record.remainingPeriodsNumber,jdbcType=CHAR},
      over_periods_number = #{record.overPeriodsNumber,jdbcType=CHAR},
      total_already_principal = #{record.totalAlreadyPrincipal,jdbcType=BIGINT},
      total_already_interest = #{record.totalAlreadyInterest,jdbcType=BIGINT},
      loan_form = #{record.loanForm,jdbcType=VARCHAR},
      loan_account_state = #{record.loanAccountState,jdbcType=VARCHAR},
      accrued_accrual_state = #{record.accruedAccrualState,jdbcType=VARCHAR},
      total_repayment_amount = #{record.totalRepaymentAmount,jdbcType=BIGINT},
      each_repayment_amount = #{record.eachRepaymentAmount,jdbcType=BIGINT},
      retained_amount = #{record.retainedAmount,jdbcType=BIGINT},
      repayment_cycle = #{record.repaymentCycle,jdbcType=CHAR},
      principal_segmentation = #{record.principalSegmentation,jdbcType=VARCHAR},
      start_date = #{record.startDate,jdbcType=CHAR},
      end_date = #{record.endDate,jdbcType=CHAR},
      last_repayment_date = #{record.lastRepaymentDate,jdbcType=CHAR},
      normal_principal = #{record.normalPrincipal,jdbcType=BIGINT},
      writeoff_principal = #{record.writeoffPrincipal,jdbcType=BIGINT},
      writeoff_interest = #{record.writeoffInterest,jdbcType=BIGINT},
      child_periods = #{record.childPeriods,jdbcType=VARCHAR},
      transaction_date = #{record.transactionDate,jdbcType=CHAR},
      accumulated_overdue_principal = #{record.accumulatedOverduePrincipal,jdbcType=BIGINT},
      accumulated_overdue = #{record.accumulatedOverdue,jdbcType=BIGINT},
      accumulate_principal = #{record.accumulatePrincipal,jdbcType=BIGINT},
      accumulate_interest = #{record.accumulateInterest,jdbcType=BIGINT},
      data_from = #{record.dataFrom,jdbcType=CHAR},
      create_user = #{record.createUser,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      effective = #{record.effective,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yonyou.scf.common.entity.RepaymentSchedule" >
    update repayment_schedule
    <set >
      <if test="capitalId != null" >
        capital_id = #{capitalId,jdbcType=BIGINT},
      </if>
      <if test="loanId != null" >
        loan_id = #{loanId,jdbcType=BIGINT},
      </if>
      <if test="financeId != null" >
        finance_id = #{financeId,jdbcType=BIGINT},
      </if>
      <if test="financeAmount != null" >
        finance_amount = #{financeAmount,jdbcType=BIGINT},
      </if>
      <if test="loanAmount != null" >
        loan_amount = #{loanAmount,jdbcType=BIGINT},
      </if>
      <if test="businessNumber != null" >
        business_number = #{businessNumber,jdbcType=VARCHAR},
      </if>
      <if test="memberNumber != null" >
        member_number = #{memberNumber,jdbcType=VARCHAR},
      </if>
      <if test="penNumber != null" >
        pen_number = #{penNumber,jdbcType=CHAR},
      </if>
      <if test="loanAccount != null" >
        loan_account = #{loanAccount,jdbcType=VARCHAR},
      </if>
      <if test="loanDebitNumber != null" >
        loan_debit_number = #{loanDebitNumber,jdbcType=VARCHAR},
      </if>
      <if test="productCode != null" >
        product_code = #{productCode,jdbcType=VARCHAR},
      </if>
      <if test="productName != null" >
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="clientNumber != null" >
        client_number = #{clientNumber,jdbcType=VARCHAR},
      </if>
      <if test="clientName != null" >
        client_name = #{clientName,jdbcType=VARCHAR},
      </if>
      <if test="contractAmount != null" >
        contract_amount = #{contractAmount,jdbcType=BIGINT},
      </if>
      <if test="borrowAmount != null" >
        borrow_amount = #{borrowAmount,jdbcType=BIGINT},
      </if>
      <if test="ymRateMakr != null" >
        ym_rate_makr = #{ymRateMakr,jdbcType=VARCHAR},
      </if>
      <if test="annualInterestRate != null" >
        annual_interest_rate = #{annualInterestRate,jdbcType=BIGINT},
      </if>
      <if test="repayment != null" >
        repayment = #{repayment,jdbcType=VARCHAR},
      </if>
      <if test="equalRules != null" >
        equal_rules = #{equalRules,jdbcType=VARCHAR},
      </if>
      <if test="totalPeriodsNumber != null" >
        total_periods_number = #{totalPeriodsNumber,jdbcType=CHAR},
      </if>
      <if test="currentPeriodsNumber != null" >
        current_periods_number = #{currentPeriodsNumber,jdbcType=CHAR},
      </if>
      <if test="overduePeriodsNumber != null" >
        overdue_periods_number = #{overduePeriodsNumber,jdbcType=CHAR},
      </if>
      <if test="remainingPeriodsNumber != null" >
        remaining_periods_number = #{remainingPeriodsNumber,jdbcType=CHAR},
      </if>
      <if test="overPeriodsNumber != null" >
        over_periods_number = #{overPeriodsNumber,jdbcType=CHAR},
      </if>
      <if test="totalAlreadyPrincipal != null" >
        total_already_principal = #{totalAlreadyPrincipal,jdbcType=BIGINT},
      </if>
      <if test="totalAlreadyInterest != null" >
        total_already_interest = #{totalAlreadyInterest,jdbcType=BIGINT},
      </if>
      <if test="loanForm != null" >
        loan_form = #{loanForm,jdbcType=VARCHAR},
      </if>
      <if test="loanAccountState != null" >
        loan_account_state = #{loanAccountState,jdbcType=VARCHAR},
      </if>
      <if test="accruedAccrualState != null" >
        accrued_accrual_state = #{accruedAccrualState,jdbcType=VARCHAR},
      </if>
      <if test="totalRepaymentAmount != null" >
        total_repayment_amount = #{totalRepaymentAmount,jdbcType=BIGINT},
      </if>
      <if test="eachRepaymentAmount != null" >
        each_repayment_amount = #{eachRepaymentAmount,jdbcType=BIGINT},
      </if>
      <if test="retainedAmount != null" >
        retained_amount = #{retainedAmount,jdbcType=BIGINT},
      </if>
      <if test="repaymentCycle != null" >
        repayment_cycle = #{repaymentCycle,jdbcType=CHAR},
      </if>
      <if test="principalSegmentation != null" >
        principal_segmentation = #{principalSegmentation,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null" >
        start_date = #{startDate,jdbcType=CHAR},
      </if>
      <if test="endDate != null" >
        end_date = #{endDate,jdbcType=CHAR},
      </if>
      <if test="lastRepaymentDate != null" >
        last_repayment_date = #{lastRepaymentDate,jdbcType=CHAR},
      </if>
      <if test="normalPrincipal != null" >
        normal_principal = #{normalPrincipal,jdbcType=BIGINT},
      </if>
      <if test="writeoffPrincipal != null" >
        writeoff_principal = #{writeoffPrincipal,jdbcType=BIGINT},
      </if>
      <if test="writeoffInterest != null" >
        writeoff_interest = #{writeoffInterest,jdbcType=BIGINT},
      </if>
      <if test="childPeriods != null" >
        child_periods = #{childPeriods,jdbcType=VARCHAR},
      </if>
      <if test="transactionDate != null" >
        transaction_date = #{transactionDate,jdbcType=CHAR},
      </if>
      <if test="accumulatedOverduePrincipal != null" >
        accumulated_overdue_principal = #{accumulatedOverduePrincipal,jdbcType=BIGINT},
      </if>
      <if test="accumulatedOverdue != null" >
        accumulated_overdue = #{accumulatedOverdue,jdbcType=BIGINT},
      </if>
      <if test="accumulatePrincipal != null" >
        accumulate_principal = #{accumulatePrincipal,jdbcType=BIGINT},
      </if>
      <if test="accumulateInterest != null" >
        accumulate_interest = #{accumulateInterest,jdbcType=BIGINT},
      </if>
      <if test="dataFrom != null" >
        data_from = #{dataFrom,jdbcType=CHAR},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="effective != null" >
        effective = #{effective,jdbcType=CHAR},
      </if>
    </set>
    where rs_id = #{rsId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yonyou.scf.common.entity.RepaymentSchedule" >
    update repayment_schedule
    set capital_id = #{capitalId,jdbcType=BIGINT},
      loan_id = #{loanId,jdbcType=BIGINT},
      finance_id = #{financeId,jdbcType=BIGINT},
      finance_amount = #{financeAmount,jdbcType=BIGINT},
      loan_amount = #{loanAmount,jdbcType=BIGINT},
      business_number = #{businessNumber,jdbcType=VARCHAR},
      member_number = #{memberNumber,jdbcType=VARCHAR},
      pen_number = #{penNumber,jdbcType=CHAR},
      loan_account = #{loanAccount,jdbcType=VARCHAR},
      loan_debit_number = #{loanDebitNumber,jdbcType=VARCHAR},
      product_code = #{productCode,jdbcType=VARCHAR},
      product_name = #{productName,jdbcType=VARCHAR},
      client_number = #{clientNumber,jdbcType=VARCHAR},
      client_name = #{clientName,jdbcType=VARCHAR},
      contract_amount = #{contractAmount,jdbcType=BIGINT},
      borrow_amount = #{borrowAmount,jdbcType=BIGINT},
      ym_rate_makr = #{ymRateMakr,jdbcType=VARCHAR},
      annual_interest_rate = #{annualInterestRate,jdbcType=BIGINT},
      repayment = #{repayment,jdbcType=VARCHAR},
      equal_rules = #{equalRules,jdbcType=VARCHAR},
      total_periods_number = #{totalPeriodsNumber,jdbcType=CHAR},
      current_periods_number = #{currentPeriodsNumber,jdbcType=CHAR},
      overdue_periods_number = #{overduePeriodsNumber,jdbcType=CHAR},
      remaining_periods_number = #{remainingPeriodsNumber,jdbcType=CHAR},
      over_periods_number = #{overPeriodsNumber,jdbcType=CHAR},
      total_already_principal = #{totalAlreadyPrincipal,jdbcType=BIGINT},
      total_already_interest = #{totalAlreadyInterest,jdbcType=BIGINT},
      loan_form = #{loanForm,jdbcType=VARCHAR},
      loan_account_state = #{loanAccountState,jdbcType=VARCHAR},
      accrued_accrual_state = #{accruedAccrualState,jdbcType=VARCHAR},
      total_repayment_amount = #{totalRepaymentAmount,jdbcType=BIGINT},
      each_repayment_amount = #{eachRepaymentAmount,jdbcType=BIGINT},
      retained_amount = #{retainedAmount,jdbcType=BIGINT},
      repayment_cycle = #{repaymentCycle,jdbcType=CHAR},
      principal_segmentation = #{principalSegmentation,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=CHAR},
      end_date = #{endDate,jdbcType=CHAR},
      last_repayment_date = #{lastRepaymentDate,jdbcType=CHAR},
      normal_principal = #{normalPrincipal,jdbcType=BIGINT},
      writeoff_principal = #{writeoffPrincipal,jdbcType=BIGINT},
      writeoff_interest = #{writeoffInterest,jdbcType=BIGINT},
      child_periods = #{childPeriods,jdbcType=VARCHAR},
      transaction_date = #{transactionDate,jdbcType=CHAR},
      accumulated_overdue_principal = #{accumulatedOverduePrincipal,jdbcType=BIGINT},
      accumulated_overdue = #{accumulatedOverdue,jdbcType=BIGINT},
      accumulate_principal = #{accumulatePrincipal,jdbcType=BIGINT},
      accumulate_interest = #{accumulateInterest,jdbcType=BIGINT},
      data_from = #{dataFrom,jdbcType=CHAR},
      create_user = #{createUser,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=VARCHAR},
      effective = #{effective,jdbcType=CHAR}
    where rs_id = #{rsId,jdbcType=BIGINT}
  </update>
</mapper>