<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yonyou.scf.common.mapper.auto.RefundApplyMapper" >
  <resultMap id="BaseResultMap" type="com.yonyou.scf.common.entity.RefundApply" >
    <id column="refund_apply_id" property="refundApplyId" jdbcType="BIGINT" />
    <result column="pay_id" property="payId" jdbcType="BIGINT" />
    <result column="refund_id" property="refundId" jdbcType="BIGINT" />
    <result column="refund_amount" property="refundAmount" jdbcType="BIGINT" />
    <result column="apply_time" property="applyTime" jdbcType="VARCHAR" />
    <result column="apply_user" property="applyUser" jdbcType="BIGINT" />
    <result column="apply_status" property="applyStatus" jdbcType="VARCHAR" />
    <result column="refund_time" property="refundTime" jdbcType="VARCHAR" />
    <result column="refund_user" property="refundUser" jdbcType="BIGINT" />
    <result column="platform_id" property="platformId" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="VARCHAR" />
    <result column="update_user" property="updateUser" jdbcType="BIGINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    refund_apply_id, pay_id, refund_id, refund_amount, apply_time, apply_user, apply_status, 
    refund_time, refund_user, platform_id, create_time, create_user, update_time, update_user, 
    remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yonyou.scf.common.entity.RefundApplyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from refund_apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from refund_apply
    where refund_apply_id = #{refundApplyId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from refund_apply
    where refund_apply_id = #{refundApplyId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yonyou.scf.common.entity.RefundApplyExample" >
    delete from refund_apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yonyou.scf.common.entity.RefundApply" >
    insert into refund_apply (refund_apply_id, pay_id, refund_id, 
      refund_amount, apply_time, apply_user, 
      apply_status, refund_time, refund_user, 
      platform_id, create_time, create_user, 
      update_time, update_user, remark
      )
    values (#{refundApplyId,jdbcType=BIGINT}, #{payId,jdbcType=BIGINT}, #{refundId,jdbcType=BIGINT}, 
      #{refundAmount,jdbcType=BIGINT}, #{applyTime,jdbcType=VARCHAR}, #{applyUser,jdbcType=BIGINT}, 
      #{applyStatus,jdbcType=VARCHAR}, #{refundTime,jdbcType=VARCHAR}, #{refundUser,jdbcType=BIGINT}, 
      #{platformId,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{createUser,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=VARCHAR}, #{updateUser,jdbcType=BIGINT}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yonyou.scf.common.entity.RefundApply" >
    insert into refund_apply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="refundApplyId != null" >
        refund_apply_id,
      </if>
      <if test="payId != null" >
        pay_id,
      </if>
      <if test="refundId != null" >
        refund_id,
      </if>
      <if test="refundAmount != null" >
        refund_amount,
      </if>
      <if test="applyTime != null" >
        apply_time,
      </if>
      <if test="applyUser != null" >
        apply_user,
      </if>
      <if test="applyStatus != null" >
        apply_status,
      </if>
      <if test="refundTime != null" >
        refund_time,
      </if>
      <if test="refundUser != null" >
        refund_user,
      </if>
      <if test="platformId != null" >
        platform_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="refundApplyId != null" >
        #{refundApplyId,jdbcType=BIGINT},
      </if>
      <if test="payId != null" >
        #{payId,jdbcType=BIGINT},
      </if>
      <if test="refundId != null" >
        #{refundId,jdbcType=BIGINT},
      </if>
      <if test="refundAmount != null" >
        #{refundAmount,jdbcType=BIGINT},
      </if>
      <if test="applyTime != null" >
        #{applyTime,jdbcType=VARCHAR},
      </if>
      <if test="applyUser != null" >
        #{applyUser,jdbcType=BIGINT},
      </if>
      <if test="applyStatus != null" >
        #{applyStatus,jdbcType=VARCHAR},
      </if>
      <if test="refundTime != null" >
        #{refundTime,jdbcType=VARCHAR},
      </if>
      <if test="refundUser != null" >
        #{refundUser,jdbcType=BIGINT},
      </if>
      <if test="platformId != null" >
        #{platformId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yonyou.scf.common.entity.RefundApplyExample" resultType="java.lang.Integer" >
    select count(*) from refund_apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update refund_apply
    <set >
      <if test="record.refundApplyId != null" >
        refund_apply_id = #{record.refundApplyId,jdbcType=BIGINT},
      </if>
      <if test="record.payId != null" >
        pay_id = #{record.payId,jdbcType=BIGINT},
      </if>
      <if test="record.refundId != null" >
        refund_id = #{record.refundId,jdbcType=BIGINT},
      </if>
      <if test="record.refundAmount != null" >
        refund_amount = #{record.refundAmount,jdbcType=BIGINT},
      </if>
      <if test="record.applyTime != null" >
        apply_time = #{record.applyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.applyUser != null" >
        apply_user = #{record.applyUser,jdbcType=BIGINT},
      </if>
      <if test="record.applyStatus != null" >
        apply_status = #{record.applyStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.refundTime != null" >
        refund_time = #{record.refundTime,jdbcType=VARCHAR},
      </if>
      <if test="record.refundUser != null" >
        refund_user = #{record.refundUser,jdbcType=BIGINT},
      </if>
      <if test="record.platformId != null" >
        platform_id = #{record.platformId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUser != null" >
        update_user = #{record.updateUser,jdbcType=BIGINT},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update refund_apply
    set refund_apply_id = #{record.refundApplyId,jdbcType=BIGINT},
      pay_id = #{record.payId,jdbcType=BIGINT},
      refund_id = #{record.refundId,jdbcType=BIGINT},
      refund_amount = #{record.refundAmount,jdbcType=BIGINT},
      apply_time = #{record.applyTime,jdbcType=VARCHAR},
      apply_user = #{record.applyUser,jdbcType=BIGINT},
      apply_status = #{record.applyStatus,jdbcType=VARCHAR},
      refund_time = #{record.refundTime,jdbcType=VARCHAR},
      refund_user = #{record.refundUser,jdbcType=BIGINT},
      platform_id = #{record.platformId,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=VARCHAR},
      update_user = #{record.updateUser,jdbcType=BIGINT},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yonyou.scf.common.entity.RefundApply" >
    update refund_apply
    <set >
      <if test="payId != null" >
        pay_id = #{payId,jdbcType=BIGINT},
      </if>
      <if test="refundId != null" >
        refund_id = #{refundId,jdbcType=BIGINT},
      </if>
      <if test="refundAmount != null" >
        refund_amount = #{refundAmount,jdbcType=BIGINT},
      </if>
      <if test="applyTime != null" >
        apply_time = #{applyTime,jdbcType=VARCHAR},
      </if>
      <if test="applyUser != null" >
        apply_user = #{applyUser,jdbcType=BIGINT},
      </if>
      <if test="applyStatus != null" >
        apply_status = #{applyStatus,jdbcType=VARCHAR},
      </if>
      <if test="refundTime != null" >
        refund_time = #{refundTime,jdbcType=VARCHAR},
      </if>
      <if test="refundUser != null" >
        refund_user = #{refundUser,jdbcType=BIGINT},
      </if>
      <if test="platformId != null" >
        platform_id = #{platformId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where refund_apply_id = #{refundApplyId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yonyou.scf.common.entity.RefundApply" >
    update refund_apply
    set pay_id = #{payId,jdbcType=BIGINT},
      refund_id = #{refundId,jdbcType=BIGINT},
      refund_amount = #{refundAmount,jdbcType=BIGINT},
      apply_time = #{applyTime,jdbcType=VARCHAR},
      apply_user = #{applyUser,jdbcType=BIGINT},
      apply_status = #{applyStatus,jdbcType=VARCHAR},
      refund_time = #{refundTime,jdbcType=VARCHAR},
      refund_user = #{refundUser,jdbcType=BIGINT},
      platform_id = #{platformId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR}
    where refund_apply_id = #{refundApplyId,jdbcType=BIGINT}
  </update>
</mapper>