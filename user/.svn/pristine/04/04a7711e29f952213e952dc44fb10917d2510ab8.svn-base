package com.yonyou.scf.user.controller;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;

import java.util.HashMap;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.data.redis.core.RedisTemplate;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
 
@RestController
@RequestMapping("/PARA")
@Api(value = "PARAM API接口", description = "v1.0 测试用")
public class ParamController {
	
	final String ENABLE = "01";
	
    @Resource
    private RedisTemplate redisTemplate;
   
//    @ApiOperation(value="根据表名和字段名取得枚举值列表", notes="v1.0 测试用")
//    @RequestMapping(value="/PARAM/{table}/{column}",method = RequestMethod.GET)
//    public Map<String, String> getMap(@ApiParam("表名") @PathVariable String table,
//    		@ApiParam("字段名") @PathVariable String column){
//
//    	Map<String, String> kv = redisTemplate.opsForHash().entries("user_info/user_type");
//    	
//        return kv;
//    }
    
    @SuppressWarnings("unchecked")
    @ApiOperation(value="根据表名和字段名取得枚举值列表", notes="v1.0 测试用")
    @RequestMapping(value="/0001",method = RequestMethod.GET)
    public Map<String, String> getMap(@ApiParam("表名") 
    		@RequestParam(value = "table", required = true, defaultValue = "user_info") String table,
    		@ApiParam("列名") @RequestParam(value = "column", required = true, defaultValue = "user_type") String column){

		Map<String, String> kv = redisTemplate.opsForHash().entries(table + "/" + column);
    	
        return kv;
    }
    
    @SuppressWarnings("unchecked")
    @ApiOperation(value="根据表名ID和NAME映射关系", notes="v1.0 测试用")
    @RequestMapping(value="/0002",method = RequestMethod.GET)
    public Map<String, String> trans(@ApiParam("表名") 
    		@RequestParam(value = "table", required = true, defaultValue = "user_info") String table){

		Map<String, String> kv = redisTemplate.opsForHash().entries(table);
    	
        return kv;
    }
    
    @SuppressWarnings("unchecked")
	@ApiOperation(value="初始化测试数据", notes="v1.0 测试用")
    @RequestMapping(value="/PARAM/init",method = RequestMethod.POST)
    public String init(@ApiParam("dummy") @RequestParam(value = "abc", required = false, defaultValue = "只是示例") String dummy){
    	
    	Map<String, String> kv = new HashMap<String, String>();
    	
    	kv.put("10", "个人");
    	kv.put("20", "企业");
    			
    	redisTemplate.opsForHash().putAll("user_info/user_type", kv);
    	
        return "Success";
    } 
    
    @SuppressWarnings("unchecked")
    @ApiOperation(value="清空测试数据", notes="v1.0 测试用")
    @RequestMapping(value="/PARAM/deleteAll",method = RequestMethod.POST)
    public String deleteAll(@ApiParam("dummy") @RequestParam(value = "bcd", required = false, defaultValue = "只是示例") String dummy){
    	
    	redisTemplate.delete("user_info/user_type");
    	
        return "Success";
    } 
    
    //@RequestBody
}