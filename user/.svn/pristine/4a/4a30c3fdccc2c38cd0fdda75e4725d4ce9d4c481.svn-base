package com.yonyou.scf.user.service;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.redis.core.RedisTemplate;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.yonyou.scf.common.constant.UserConst;
import com.yonyou.scf.common.entity.CompanyRelationship;
import com.yonyou.scf.common.entity.CompanyRelationshipExample;
import com.yonyou.scf.common.entity.UserRoleType;
import com.yonyou.scf.common.entity.UserRoleTypeExample;
import com.yonyou.scf.common.mapper.auto.CompanyRelationshipMapper;
import com.yonyou.scf.common.mapper.auto.UserRoleTypeMapper;
import com.yonyou.scf.user.mapper.hand.UserMapper;

@Transactional
@Service
public class CommonService {

		@Autowired
        private UserMapper userMappper;
         
        @SuppressWarnings("rawtypes")
		@Resource
        private RedisTemplate redisTemplate;
        
        @Resource
        private UserRoleTypeMapper userRoleTypeMapper;
        
        //客户名称获取
        public Map<String, Object> COMDD0031(){
        	
        	Map<String, Object> params = new HashMap<String, Object>();
    		params.put("user_style_company", UserConst.user_style_company);
    		params.put("user_style_person", UserConst.user_style_person);
    		
    		List<Map<String,Object>> datalist = userMappper.getUserNameList(params);
    		
        	Map<String, Object> result = new HashMap<String, Object>();
        	
        	for (Map<String,Object> data:datalist) {        		
        		result.put(data.get("userid").toString(),data.get("username"));
        	}
    		
    		return result;
        }
        
        //证件号码获取
        public Map<String, Object> COMDD0032(){
        	
        	Map<String, Object> params = new HashMap<String, Object>();
    		params.put("user_style_company", UserConst.user_style_company);
    		params.put("user_style_person", UserConst.user_style_person);
    		
    		List<Map<String,Object>> datalist = userMappper.getCredentialNumList(params);
    		
        	Map<String, Object> result = new HashMap<String, Object>();
        	
        	for (Map<String,Object> data:datalist) {        		
        		result.put(data.get("userid").toString(),data.get("credentialnum"));
        	}
    		
    		return result;
        }
        
        //客户类型下拉框获取
        @SuppressWarnings("unchecked")
		public Map<String, Object> COMDD0008(){
        	
        	return redisTemplate.opsForHash().entries("user_role/user_style");
        
        }
        
        //业务角色下拉框获取
        public Map<String, Object> COMDD0009(){
        	
        	UserRoleTypeExample userRoleTypeExample = new UserRoleTypeExample();
        	userRoleTypeExample.createCriteria().andStatusEqualTo(UserConst.user_role_type_status_no);
        	
        	List<UserRoleType> datalist = userRoleTypeMapper.selectByExample(userRoleTypeExample);
        	
        	Map<String, Object> result = new HashMap<String, Object>();
        	
        	for (UserRoleType userRoleType:datalist) {
        		result.put(userRoleType.getId().toString(),userRoleType.getUserRoleName());
        	}
        	
    		return result;
        }
        

        
        @Autowired
        private CompanyRelationshipMapper companyRelationshipMapper;
        
        //通过关联查询(专用，只能从借款方检索对应核心企业,id,3,1)
        //------------------参数------------------
        //客户ID	userId 
        //业务角色	roleType 固定3
        //业务角色	roleType2 固定1
        //------------------返回------------------
        //企业ID
        //企业名称
        public Map<String, Object> SCF931007(Long userId,String roleType,String roleType2) {
        	
        	CompanyRelationshipExample companyRelationshipExample = new CompanyRelationshipExample();
        	companyRelationshipExample.createCriteria().andCompanyId2EqualTo(userId)
        		.andCompanyRole2EqualTo(roleType)
        		.andCompanyRoleEqualTo(roleType2);
        	
        	List<CompanyRelationship> datalist = companyRelationshipMapper.selectByExample(companyRelationshipExample);
        	
        	Map<String, Object> result = new HashMap<String, Object>();
        	
        	//从id翻译企业名称的字典
        	Map<String, Object> dic = COMDD0031();
        	
        	for (CompanyRelationship companyRelationship:datalist) {
        		result.put(companyRelationship.getCompanyId().toString(),dic.get(companyRelationship.getCompanyId()));
        	}
        	
    		return result;
        }
        
}