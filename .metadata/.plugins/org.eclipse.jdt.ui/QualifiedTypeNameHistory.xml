<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="java.util.HashSet"/>
<fullyQualifiedTypeName name="java.util.LinkedHashSet"/>
<fullyQualifiedTypeName name="org.springframework.cglib.proxy.Callback"/>
<fullyQualifiedTypeName name="org.mockito.cglib.proxy.Callback"/>
<fullyQualifiedTypeName name="org.mockito.cglib.proxy.MethodInterceptor"/>
<fullyQualifiedTypeName name="org.mockito.cglib.proxy.Enhancer"/>
<fullyQualifiedTypeName name="org.mockito.cglib.proxy.MethodProxy"/>
<fullyQualifiedTypeName name="org.mockito.cglib.proxy.NoOp"/>
<fullyQualifiedTypeName name="org.mockito.cglib.proxy.CallbackFilter"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="java.util.Iterator"/>
<fullyQualifiedTypeName name="java.util.LinkedHashMap"/>
<fullyQualifiedTypeName name="java.util.LinkedList"/>
<fullyQualifiedTypeName name="java.util.AbstractSequentialList"/>
<fullyQualifiedTypeName name="java.util.HashMap"/>
<fullyQualifiedTypeName name="java.util.concurrent.ConcurrentHashMap"/>
<fullyQualifiedTypeName name="java.util.Stack"/>
<fullyQualifiedTypeName name="java.util.Queue"/>
<fullyQualifiedTypeName name="java.lang.reflect.Proxy"/>
<fullyQualifiedTypeName name="com.yonyou.scf.Gateway.InvocationH"/>
<fullyQualifiedTypeName name="java.util.concurrent.locks.ReentrantReadWriteLock"/>
<fullyQualifiedTypeName name="java.util.Collection"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.BeanNameAware"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.BeanFactoryAware"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.InitializingBean"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.config.BeanPostProcessor"/>
<fullyQualifiedTypeName name="org.springframework.context.ApplicationContextAware"/>
<fullyQualifiedTypeName name="java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock"/>
<fullyQualifiedTypeName name="java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock"/>
<fullyQualifiedTypeName name="com.sun.xml.internal.xsom.impl.scd.Iterators.Map"/>
<fullyQualifiedTypeName name="java.util.Map"/>
<fullyQualifiedTypeName name="java.text.SimpleDateFormat"/>
<fullyQualifiedTypeName name="com.wyx.aspectjTest.service.HelloWorldService.Processor"/>
<fullyQualifiedTypeName name="com.wyx.aspectjTest.service.HelloWorldService.Iface"/>
<fullyQualifiedTypeName name="com.wyx.aspectjTest.iml.HelloWorldServiceIml"/>
<fullyQualifiedTypeName name="org.apache.thrift.TProcessor"/>
<fullyQualifiedTypeName name="org.apache.thrift.transport.TServerSocket"/>
<fullyQualifiedTypeName name="org.apache.thrift.transport.TTransportFactory"/>
<fullyQualifiedTypeName name="org.apache.thrift.protocol.TBinaryProtocol.Factory"/>
<fullyQualifiedTypeName name="org.apache.thrift.server.TServer"/>
<fullyQualifiedTypeName name="java.lang.reflect.Constructor"/>
<fullyQualifiedTypeName name="org.apache.thrift.server.TSimpleServer"/>
<fullyQualifiedTypeName name="org.apache.thrift.server.TServer.AbstractServerArgs"/>
<fullyQualifiedTypeName name="org.apache.thrift.transport.TSocket"/>
<fullyQualifiedTypeName name="org.apache.thrift.transport.TFramedTransport"/>
<fullyQualifiedTypeName name="org.apache.thrift.transport.TTransport"/>
<fullyQualifiedTypeName name="org.apache.thrift.protocol.TProtocol"/>
<fullyQualifiedTypeName name="org.apache.thrift.protocol.TBinaryProtocol"/>
<fullyQualifiedTypeName name="com.wyx.aspectjTest.service.HelloWorldService.Client"/>
<fullyQualifiedTypeName name="com.wyx.aspectjTest.service.HelloWorldService"/>
<fullyQualifiedTypeName name="org.apache.thrift.transport.TTransportException"/>
<fullyQualifiedTypeName name="org.apache.thrift.TException"/>
<fullyQualifiedTypeName name="java.nio.ByteBuffer"/>
<fullyQualifiedTypeName name="java.nio.channels.Channel"/>
<fullyQualifiedTypeName name="com.google.inject.internal.cglib.proxy.InvocationHandler"/>
<fullyQualifiedTypeName name="io.netty.buffer.ByteBuf"/>
<fullyQualifiedTypeName name="java.lang.RuntimeException"/>
<fullyQualifiedTypeName name="javax.management.RuntimeErrorException"/>
</qualifiedTypeNameHistroy>
